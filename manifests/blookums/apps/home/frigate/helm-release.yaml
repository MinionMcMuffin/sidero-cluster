---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: frigate
  namespace: home
spec:
  dependsOn:
    - name: rook-ceph
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: frigate
      version: 8.2.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: blakeblackshear/frigate
      tag: 0.10.1-amd64
    env:
      TZ: America/New_York
    envFrom:
      - secretRef:
          name: frigate-secret
    configmap:
      config:
        enabled: true
        data:
          config.yml:
    ingress:
      main:
        enabled: true
        annotations:
          kubernetes.io/tls-acme: 'true'
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/auth-url: http://oauth2-proxy.kube-system.svc.cluster.local/oauth2/auth
          nginx.ingress.kubernetes.io/auth-signin: ${SECRET_AUTH_URL}
          cert-manager.io/cluster-issuer: letsencrypt-prod
        hosts:
          - host: frigate.${SECRET_DOMAIN}
            paths:
              - path: /
        tls:
          - hosts:
              - frigate.${SECRET_DOMAIN}
            secretName: frigate.cert
    persistence:
      config-file:
        enabled: true
        type: configMap
        name: frigate-configmap
        subPath: config.yaml
        mountPath: /config/config.yml
        readOnly: true
      data:
        enabled: true
        storageClass: ceph-hdd
        accessMode: ReadWriteOnce
        size: 2Ti
      media:
        enabled: true
        storageClass: ceph-hdd
        accessMode: ReadWriteOnce
        size: 20Ti
      usb:
        enabled: true
        type: hostPath
        hostPath: /dev/bus/usb
      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 4Gi
        mountPath: /dev/shm
    securityContext:
      # -- (bool) Privileged securityContext may be required if USB devices are accessed directly through the host machine
      privileged: true
    nodeSelector:
      google.feature.node.kubernetes.io/coral: 'true'
    resources:
      requests:
        memory: 100Mi
        cpu: 500m
      limits:
        memory: 2000Mi
    podAnnotations:
      backup.velero.io/backup-volumes: config,media,data
